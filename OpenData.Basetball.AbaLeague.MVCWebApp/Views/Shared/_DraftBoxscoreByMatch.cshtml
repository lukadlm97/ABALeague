@model OpenData.Basetball.AbaLeague.MVCWebApp.Models.BoxscoreDraftByMatchViewModel

<div class="container mt-4">
    <div class="card">
        <div class="card-header">
            <h4 class="mb-0">Match Result</h4>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Home Team</dt>
                <dd class="col-sm-9">@Model.MatchResult.HomeTeamName: @Model.MatchResult.HomeTeamPoints</dd>

                <dt class="col-sm-3">Away Team</dt>
                <dd class="col-sm-9">@Model.MatchResult.AwayTeamName: @Model.MatchResult.AwayTeamPoints</dd>

                <dt class="col-sm-3">Venue</dt>
                <dd class="col-sm-9">@Model.MatchResult.Venue</dd>

                <dt class="col-sm-3">Attendance</dt>
                <dd class="col-sm-9">@Model.MatchResult.Attendency</dd>

                <dt class="col-sm-3">Match Number</dt>
                <dd class="col-sm-9">@Model.MatchResult.MatchNo</dd>

                <dt class="col-sm-3">Round</dt>
                <dd class="col-sm-9">@Model.MatchResult.Round</dd>
            </dl>
            <h5>Draft scores waiting for approval</h5>
            @if (Model.AvailableDraftBoxscoreItems)
            {
                 @if (Model.HomeDraftBoxscoreItems != null && Model.HomeDraftBoxscoreItems.Any())
            {
                <h5>@Model.MatchResult.HomeTeamName</h5>
                <p style="color: @(Model.HomeTeamMatch ? "green" : "red");">
                    @Model.HomeTeamPoints
                </p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].PlayerName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].TeamName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].Points)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].TotalRebounds)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].Assists)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].Turnover)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].Steals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].RankValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.HomeDraftBoxscoreItems[0].PlusMinus)
                            </th>
                            <td>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                         @foreach (var item in Model.HomeDraftBoxscoreItems)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlayerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeamName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Points)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalRebounds)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Assists)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turnover)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Steals)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlusMinus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RankValue)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>
                    Not availabe drafts for home team
                </p>
            }
            @if (Model.AwayDraftBoxscoreItems != null && Model.AwayDraftBoxscoreItems.Any())
            {
                <h5>@Model.MatchResult.AwayTeamName</h5>
                <p style="color: @(Model.AwayTeamMatch ? "green" : "red");">
                    @Model.AwayTeamPoints
                </p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].PlayerName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].TeamName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].Points)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].TotalRebounds)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].Assists)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].Turnover)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].Steals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].RankValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AwayDraftBoxscoreItems[0].PlusMinus)
                            </th>
                            <td>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.AwayDraftBoxscoreItems)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlayerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeamName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Points)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalRebounds)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Assists)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turnover)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Steals)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlusMinus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RankValue)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>
                    Not availabe drafts for away team
                </p>
                }
                @if ((Model.HomeDraftBoxscoreItems != null && Model.AwayDraftBoxscoreItems != null) && (Model.HomeDraftBoxscoreItems.Any() || Model.AwayDraftBoxscoreItems.Any()))
                {
                    <div class="card-body">
                        <form asp-controller="Boxscore" asp-action="AddByMatch" method="post"
                              asp-route-leagueId="@Model.LeagueId" asp-route-matchResultId="@Model.MatchResultId">
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" class="btn btn-success">Create Boxscore</button>
                                </div>
                            </div>
                        </form>
                    </div>
                }
       }
       else
       {
                <p style="color:red;">
                    Not availabe boxscore drafts for any of teams
                </p>
       }
        <h5>Existing boxscore</h5>

        @if (Model.HomeExistingBoxscoreItems != null && Model.HomeExistingBoxscoreItems.Any())
        {
            <h6>Home team: @Model.MatchResult.HomeTeamName</h6>
            <p style="color: @(Model.HomeTeamMatch ? "green" : "red");">
                @Model.HomeTeamPoints
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].PlayerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].TeamName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].Points)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].TotalRebounds)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].Assists)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].Turnover)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].Steals)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].RankValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.HomeExistingBoxscoreItems[0].PlusMinus)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.HomeExistingBoxscoreItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TeamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Points)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalRebounds)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Assists)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Turnover)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Steals)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlusMinus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RankValue)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {  
            <p style="color:red;">
                    Not availabe existing scores for home team
            </p>
        }
        @if (Model.AwayExistingBoxscoreItems != null && Model.AwayExistingBoxscoreItems.Any())
        {
            <h6>Away team: @Model.MatchResult.AwayTeamName</h6>
            <p style="color: @(Model.AwayTeamMatch ? "green" : "red");">
                @Model.AwayTeamPoints
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].PlayerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].TeamName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].Points)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].TotalRebounds)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].Assists)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].Turnover)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].Steals)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].RankValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AwayExistingBoxscoreItems[0].PlusMinus)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.AwayExistingBoxscoreItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TeamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Points)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalRebounds)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Assists)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Turnover)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Steals)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlusMinus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RankValue)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p style="color:red;">
                Not availabe existing scores for away team
            </p>
        }

            <h5>Missing roster items</h5>
            @if (Model.AvailableDraftRosterItems)
            {
               
                @if (Model.DraftRosterItems != null && Model.DraftRosterItems.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.DraftRosterItems[0].PlayerName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DraftRosterItems[0].TeamName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.DraftRosterItems[0].LeagueName)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.DraftRosterItems)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PlayerName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TeamName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LeagueName)
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-outline-dark create-history-roster-item"
                                                data-teamId="@item.TeamId" data-playerId="@item.PlayerId">
                                            Create Historical Roster Item
                                        </button>

                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }
            else
            {
                <p style="color:red;">
                    Not availabe new roster items
                </p>
            }
           



        <h5>Missing player items</h5>
            @if (Model.AvailableMissingPlayerItems)
            {
                @if (Model.MissingPlayerItems != null && Model.MissingPlayerItems.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    Player name
                                </th>
                                <th>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.MissingPlayerItems)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item)
                                    </td>
                                    <td>
                                        <a asp-controller="Player" asp-action="UpsertWithName"
                                           asp-route-playerName="@item"
                                           asp-route-leagueId="@Model.LeagueId"
                                           class="btn btn-outline-dark">Create Player</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            }
            else
            {
                <p style="color:red;">
                    Not avaiabe players that waiting for adding
                </p>
            }
       
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        $('.create-history-roster-item').click(function () {
            var teamId = $(this).data('teamid'); // Use 'teamid' instead of 'teamId'
            var playerId = $(this).data('playerid'); // Use 'playerid' instead of 'playerId'

            console.log('Team ID:', teamId, 'Player ID:', playerId);
            var url = '/Roster/SaveHistoryDraftRosterItem' +
                '?teamId=' + encodeURIComponent(teamId) +
                '&playerId=' + encodeURIComponent(playerId) +
                '&leagueId=' + encodeURIComponent('@Model.LeagueId');
            $.ajax({
                url: url, // Replace with the actual URL of your action
                type: 'POST',
                success: function (data) {
                    // Handle success if needed
                    console.log('Success');
                    var newUrl = '/Boxscore/Index/' + @Model.LeagueId + '/' + @Model.MatchResultId;
                    window.location.href = newUrl;
                },
                error: function (error) {
                    // Handle error if needed
                    console.log('Error');
                }
            });
        });
    });
</script>