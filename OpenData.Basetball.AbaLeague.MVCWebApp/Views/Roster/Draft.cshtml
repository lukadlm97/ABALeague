@model OpenData.Basetball.AbaLeague.MVCWebApp.Models.DraftRosterViewModel


<h4>Roster page</h4>
<h5>Draft roster items</h5>
<form asp-controller="Roster" asp-action="SaveDraftRosterItems" method="post" asp-route-leagueId="@Model.LeagueId">
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.DraftRosterItems[0].LeagueName)</th>
                <th>@Html.DisplayNameFor(model => model.DraftRosterItems[0].TeamName)</th>
                <th>@Html.DisplayNameFor(model => model.DraftRosterItems[0].PlayerName)</th>
                <th>Create Roster Items</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.DraftRosterItems != null && Model.DraftRosterItems.Any())
            {
                @foreach (var item in Model.DraftRosterItems)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.LeagueName)</td>
                        <td>@Html.DisplayFor(modelItem => item.TeamName)</td>
                        <td>@Html.DisplayFor(modelItem => item.PlayerName)</td>
                        <td>
                            <form method="post" asp-controller="Roster" asp-action="SaveDraftRosterItem" asp-route-leagueId="@Model.LeagueId" asp-route-teamId="@item.TeamId" asp-route-playerId="@item.PlayerId">
                                <button type="submit" class="btn btn-outline-dark">Create Roster Item</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Create Roster Items</button>
        </div>
    </div>
</form>



<h5>Missing players at system</h5>
<form asp-controller="Roster" asp-action="AddMissingPlayers" method="post" asp-route-leagueId="@Model.LeagueId">
    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.MissingPlayerItems[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.MissingPlayerItems[0].Position)</th>
                <th>@Html.DisplayNameFor(model => model.MissingPlayerItems[0].Height)</th>
                <th>@Html.DisplayNameFor(model => model.MissingPlayerItems[0].DateOfBirth)</th>
                <th>@Html.DisplayNameFor(model => model.MissingPlayerItems[0].Country)</th>
                <th>Create Players</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.MissingPlayerItems != null && Model.MissingPlayerItems.Any())
            {
                @foreach (var item in Model.MissingPlayerItems)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Position)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Height)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfBirth)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Country)
                        </td>
                        <td>
                            <a asp-controller="Player" asp-action="UpsertWithName"
                               asp-route-playerName="@item.Name"
                               asp-route-leagueId=@Model.LeagueId
                               class="btn btn-outline-dark">Create Player</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table> 
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Create Players</button>
        </div>
    </div>
</form>

<h5>Existing roster items</h5>
<form asp-controller="Score" asp-action="AddScores" method="post" asp-route-leagueId="@Model.LeagueId">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItems[0].LeagueName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItems[0].TeamName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItems[0].PlayerName)
                </th>
                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-success">Create Score From Draft</button>
                        </div>
                    </div>
                </td>
            </tr>
        </thead>
        <tbody>
            @if (Model.ExistingRosterItems != null && Model.ExistingRosterItems.Any())
            {
                @foreach (var item in Model.ExistingRosterItems)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.LeagueName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TeamName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerName)
                        </td>
                        <td>
                            
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</form>




<h5>Existing roster items with possible ended contract</h5>
<form asp-controller="Score" asp-action="AddScores" method="post" asp-route-leagueId="@Model.LeagueId">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItemsWithEndedContract[0].LeagueName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItemsWithEndedContract[0].TeamName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExistingRosterItemsWithEndedContract[0].PlayerName)
                </th>
                <td>
                  
                </td>
            </tr>
        </thead>
        <tbody>
            @if (Model.ExistingRosterItemsWithEndedContract != null && Model.ExistingRosterItemsWithEndedContract.Any())
            {
                @foreach (var item in Model.ExistingRosterItemsWithEndedContract)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.LeagueName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TeamName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PlayerName)
                        </td>
                        <td>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</form>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        $('.create-roster-item').click(function () {
            var teamId = $(this).data('teamId');
            var playerId = $(this).data('playerId');

            window.location.href = '/Roster/AddRosterItem' +
                '?teamId=' + encodeURIComponent(teamId) +
                '&playerId=' + encodeURIComponent(playerId) +
                '&leagueId=' + encodeURIComponent('@Model.LeagueId');
        });
    });
</script>