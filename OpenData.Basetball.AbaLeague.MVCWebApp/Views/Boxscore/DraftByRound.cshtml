@model OpenData.Basetball.AbaLeague.MVCWebApp.Models.BoxscoreDraftByRoundViewModel

<h3>Boxscore draft by Round @Model.RoundNo</h3>

@if(Model.Matches != null  && Model.Matches.Any())
{
    foreach(var match in Model.Matches)
    {

        <div class="container mt-4">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">Match Result</h4>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Home Team</dt>
                        <dd class="col-sm-9">@match.MatchResult.HomeTeamName: @match.MatchResult.HomeTeamPoints</dd>

                        <dt class="col-sm-3">Away Team</dt>
                        <dd class="col-sm-9">@match.MatchResult.AwayTeamName: @match.MatchResult.AwayTeamPoints</dd>

                        <dt class="col-sm-3">Venue</dt>
                        <dd class="col-sm-9">@match.MatchResult.Venue</dd>

                        <dt class="col-sm-3">Attendance</dt>
                        <dd class="col-sm-9">@match.MatchResult.Attendency</dd>

                        <dt class="col-sm-3">Match Number</dt>
                        <dd class="col-sm-9">@match.MatchResult.MatchNo</dd>

                        <dt class="col-sm-3">Round</dt>
                        <dd class="col-sm-9">@match.MatchResult.Round</dd>
                    </dl>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h5>Draft scores waiting for approval</h5>
            </div>
            @if (match.HomeDraftBoxscoreItems != null && match.HomeDraftBoxscoreItems.Any())
            {
                <h5>@match.MatchResult.HomeTeamName</h5>
                <p style="color: @(match.HomeTeamMatch ? "green" : "red");">
                    @match.HomeTeamPoints
                </p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].PlayerName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].TeamName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].Points)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].TotalRebounds)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].Assists)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].Turnover)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].Steals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].RankValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.HomeDraftBoxscoreItems[0].PlusMinus)
                            </th>
                            <td>
                            </td>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in match.HomeDraftBoxscoreItems)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlayerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeamName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Points)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalRebounds)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Assists)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turnover)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Steals)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlusMinus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RankValue)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>
                    Not availabe drafts
                </p>
            }

            @if (match.AwayDraftBoxscoreItems != null && match.AwayDraftBoxscoreItems.Any())
            {
                <h5>@match.MatchResult.AwayTeamName</h5>
                <p style="color: @(match.AwayTeamMatch ? "green" : "red");">
                    @match.AwayTeamPoints
                </p>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].PlayerName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].TeamName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].Points)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].TotalRebounds)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].Assists)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].Turnover)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].Steals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].RankValue)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => match.AwayDraftBoxscoreItems[0].PlusMinus)
                            </th>
                            <td>
                            </td>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (var item in match.AwayDraftBoxscoreItems)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlayerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TeamName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Points)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalRebounds)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Assists)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Turnover)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Steals)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.PlusMinus)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.RankValue)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>
                    Not availabe drafts
                </p>
            }

            <div class="card-body">
                <form asp-controller="Boxscore" asp-action="Add" method="post"
                      asp-route-leagueId="@match.LeagueId" asp-route-matchRoundId="@match.MatchRoundId">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" class="btn btn-success">Create Boxscore</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <h5>Existing boxscore</h5>
        @if (match.HomeExistingBoxscoreItems != null && match.HomeExistingBoxscoreItems.Any())
        {
            <h6>@match.MatchResult.HomeTeamName</h6>
            <p style="color: @(match.HomeTeamMatch ? "green" : "red");">
                @match.HomeTeamPoints
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].PlayerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].TeamName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].Points)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].TotalRebounds)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].Assists)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].Turnover)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].Steals)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].RankValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.HomeExistingBoxscoreItems[0].PlusMinus)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in match.HomeExistingBoxscoreItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TeamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Points)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalRebounds)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Assists)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Turnover)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Steals)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlusMinus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RankValue)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>
                Not availabe existing scores
            </p>
        }

        @if (match.AwayExistingBoxscoreItems != null && match.AwayExistingBoxscoreItems.Any())
        {
            <h6>@match.MatchResult.AwayTeamName</h6>
            <p style="color: @(match.AwayTeamMatch ? "green" : "red");">
                @match.AwayTeamPoints
            </p>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].PlayerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].TeamName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].Points)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].TotalRebounds)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].Assists)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].Turnover)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].Steals)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].RankValue)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.AwayExistingBoxscoreItems[0].PlusMinus)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in match.AwayExistingBoxscoreItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TeamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Points)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TotalRebounds)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Assists)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Turnover)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Steals)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlusMinus)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RankValue)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>
                Not availabe existing scores
            </p>
        }



        <h5>Missing roster items</h5>
        @if (match.DraftRosterItems != null && match.DraftRosterItems.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => match.DraftRosterItems[0].PlayerName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.DraftRosterItems[0].TeamName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => match.DraftRosterItems[0].LeagueName)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in match.DraftRosterItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.PlayerName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TeamName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LeagueName)
                            </td>
                            <td>
                                <button type="button" class="btn btn-outline-dark create-history-roster-item"
                                        data-teamId="@item.TeamId" data-playerId="@item.PlayerId">
                                    Create Historical Roster Item
                                </button>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>
                Not availabe new rosters
            </p>
        }



        <h5>Missing player items</h5>
        @if (match.MissingPlayerItems != null && match.MissingPlayerItems.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Player name
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in match.MissingPlayerItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item)
                            </td>
                            <td>
                                <a asp-controller="Player" asp-action="UpsertWithName"
                                   asp-route-playerName="@item"
                                   asp-route-leagueId="@Model.LeagueId"
                                   class="btn btn-outline-dark">Create Player</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>
                Not avaiabe players that waiting for adding
            </p>
        }

    }
}
else
{
    <p>
        Not available boxscore matches for round
    </p>
}