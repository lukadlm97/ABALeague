@model CompareTeamsViewModel


@if (!Model.IsLoadedComparisonResult)
{
    if (Model.IsLeagueSelected)
    {
        <div class="form-horizontal">
            <form asp-controller="Comparison" asp-action="CompareTeams" method="get">
                <input type="hidden" asp-for="@Model.IsLoadedComparisonResult" />
                <input type="hidden" asp-for="@Model.SelectedLeague" />
                <input type="hidden" asp-for="@Model.IsLeagueSelected" />
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.HomeTeamsSelection)
                    <div class="col-md-10">
                        <select asp-for="SelectedHomeTeam" class="form-control" asp-items="Model.HomeTeamsSelection"></select>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.AwayTeamsSelection)
                    <div class="col-md-10">
                        <select asp-for="SelectedAwayTeam" class="form-control" asp-items="Model.AwayTeamsSelection"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success">Compare</button>
                    </div>
                </div>
            </form>
        </div>
    }
    else
    {
        <div class="form-horizontal">
            <form asp-controller="Comparison" asp-action="CompareTeams" method="get">
                <hr />
                <div class="form-group">
                    @Html.LabelFor(model => model.LeagueSelection)
                    <div class="col-md-10">
                        <select asp-for="SelectedLeague" class="form-control" asp-items="Model.LeagueSelection"></select>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success">Select</button>
                    </div>
                </div>
            </form>
        </div>
    }

}
@if (Model.IsLoadedComparisonResult)
{
    <table class="performance-table">
        <thead>
            <tr>
                <th>Team names</th>
                <th>@Model.HomeTeam.Name</th>
                <th>@Model.AwayTeam.Name</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Games</td>
                <td>@Model.HomeTeam.GamesPlayed/@Model.HomeTeam.TotalGames</td>
                <td>@Model.AwayTeam.GamesPlayed/@Model.AwayTeam.TotalGames</td>
            </tr>
            <tr>
                <td>Points</td>
                <td>@Model.HomeTeam.CorePerformance.TotalPoints [@Model.HomeTeam.CorePerformance.AvgPoints]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalPoints [@Model.AwayTeam.CorePerformance.AvgPoints]</td>
            </tr>
            <tr>
                <td>Rebounds</td>
                <td>@Model.HomeTeam.CorePerformance.TotalRebounds [@Model.HomeTeam.CorePerformance.AvgRebounds]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalRebounds [@Model.AwayTeam.CorePerformance.AvgRebounds]</td>
            </tr>
            <tr>
                <td>Assists</td>
                <td>@Model.HomeTeam.CorePerformance.TotalAssists [@Model.HomeTeam.CorePerformance.AvgAssists]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalAssists [@Model.AwayTeam.CorePerformance.AvgAssists]</td>
            </tr>
            <tr>
                <td>Defensive Rebounds</td>
                <td>@Model.HomeTeam.CorePerformance.TotalDefensiveRebounds [@Model.HomeTeam.CorePerformance.AvgDefensiveRebounds]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalDefensiveRebounds [@Model.AwayTeam.CorePerformance.AvgDefensiveRebounds]</td>
            </tr>
            <tr>
                <td>Offensive Rebounds</td>
                <td>@Model.HomeTeam.CorePerformance.TotalOffensiveRebounds [@Model.HomeTeam.CorePerformance.AvgOffensiveRebounds]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalOffensiveRebounds [@Model.AwayTeam.CorePerformance.AvgOffensiveRebounds]</td>
            </tr>
            <tr>
                <td>Steals</td>
                <td>@Model.HomeTeam.CorePerformance.TotalSteals [@Model.HomeTeam.CorePerformance.AvgSteals]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalSteals [@Model.AwayTeam.CorePerformance.AvgSteals]</td>
            </tr>
            <tr>
                <td>Turnovers</td>
                <td>@Model.HomeTeam.CorePerformance.TotalTurnovers [@Model.HomeTeam.CorePerformance.AvgTurnovers]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalTurnovers [@Model.AwayTeam.CorePerformance.AvgTurnovers]</td>
            </tr>
            <tr>
                <td>Blocks Made</td>
                <td>@Model.HomeTeam.CorePerformance.TotalBlocksMade [@Model.HomeTeam.CorePerformance.AvgBlocksMade]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalBlocksMade [@Model.AwayTeam.CorePerformance.AvgBlocksMade]</td>
            </tr>
            <tr>
                <td>Blocks On</td>
                <td>@Model.HomeTeam.CorePerformance.TotalBlocksOn [@Model.HomeTeam.CorePerformance.AvgBlocksOn]</td>
                <td>@Model.AwayTeam.CorePerformance.TotalBlocksOn [@Model.AwayTeam.CorePerformance.AvgBlocksOn]</td>
            </tr>
             <tr>
                <td>Spectators</td>
                <td>@Model.HomeTeam.AdvancedBoxscoreStatsView.TotalSpectators [@Model.HomeTeam.AdvancedBoxscoreStatsView.AverageSpectators]</td>
                <td>@Model.AwayTeam.AdvancedBoxscoreStatsView.TotalSpectators [@Model.AwayTeam.AdvancedBoxscoreStatsView.AverageSpectators]</td>
            </tr>
            <tr>
                <td>Games won [Played]</td>
                <td>@Model.HomeTeam.AdvancedBoxscoreStatsView.GamesWin [@Model.HomeTeam.AdvancedBoxscoreStatsView.GamePlayed]</td>
                <td>@Model.AwayTeam.AdvancedBoxscoreStatsView.GamesWin [@Model.AwayTeam.AdvancedBoxscoreStatsView.GamePlayed]</td>
            </tr>
             <tr>
                <td>Home games W [Played]</td>
                <td>@Model.HomeTeam.AdvancedBoxscoreStatsView.HomeGamesWin [@Model.HomeTeam.AdvancedBoxscoreStatsView.HomeGamesPlayed]</td>
                <td>@Model.AwayTeam.AdvancedBoxscoreStatsView.HomeGamesWin [@Model.AwayTeam.AdvancedBoxscoreStatsView.HomeGamesPlayed]</td>
            </tr>
             <tr>
                <td>Away games W [Played]</td>
                <td>@(@Model.HomeTeam.AdvancedBoxscoreStatsView.GamesWin-@Model.HomeTeam.AdvancedBoxscoreStatsView.HomeGamesWin) [@(@Model.HomeTeam.AdvancedBoxscoreStatsView.GamePlayed-@Model.HomeTeam.AdvancedBoxscoreStatsView.HomeGamesPlayed)]</td>
                <td>@(@Model.AwayTeam.AdvancedBoxscoreStatsView.GamesWin - @Model.AwayTeam.AdvancedBoxscoreStatsView.HomeGamesWin) [@(@Model.AwayTeam.AdvancedBoxscoreStatsView.GamePlayed-@Model.AwayTeam.AdvancedBoxscoreStatsView.HomeGamesPlayed)]</td>
              </tr>
             <tr>
                <td>Home vs Away Points Scored</td>
                <td>@Model.HomeTeam.AdvancedBoxscoreStatsView.HomeGameScoredPoints:@Model.HomeTeam.AdvancedBoxscoreStatsView.AwayGameScoredPoints</td>
                <td>@Model.AwayTeam.AdvancedBoxscoreStatsView.HomeGameScoredPoints:@Model.AwayTeam.AdvancedBoxscoreStatsView.AwayGameScoredPoints</td>
             </tr>
            @foreach(var item in Model.PositionPlaceholderItems)
            {
                <tr style="background-color:@item.color">
                    <td>@item.key</td>
                    <td>
                        @foreach(var position in Model.HomeTeam.RosterItems.RosterItems.Where(x=>x.Position == item.key))
                        {
                            @foreach(var rosterItem in position.Players)
                            {

                                <div>
                                    @rosterItem.Name
                                </div>
                            }
                        }
                    </td>
                    <td>
                        @foreach (var position in Model.AwayTeam.RosterItems.RosterItems.Where(x => x.Position == item.key))
                        {
                            @foreach (var rosterItem in position.Players)
                            {

                                <div>
                                    @rosterItem.Name
                                </div>
                            }
                        }
                    </td>
                </tr>
            }
            <th>Points</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == @position.key).TotalPoints
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == @position.key).ParticipationPoints]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == @position.key).TotalPoints
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == @position.key).ParticipationPoints]
                </td>
            </tr>
            }
        <th>Rebounds</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalRebounds
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationRebounds]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalRebounds
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationRebounds]
                </td>
            </tr>
            }
        <th>Assists</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalAssists
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationAssists]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalAssists
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationAssists]
                </td>
            </tr>
            }
        <th>Turnover</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalTurnovers
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationTurnovers]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalTurnovers
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationTurnovers]
                </td>
            </tr>
            }
        <th>Points</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalSteals
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationSteals]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalSteals
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationSteals]
                </td>
            </tr>
            }
        <th>Offensive Rebounds</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalOffensiveRebounds
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationOffensiveRebounds]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalOffensiveRebounds
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationOffensiveRebounds]
                </td>
            </tr>
            }
        <th>Defensive Rebounds</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalDefensiveRebounds
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationDefensiveRebounds]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalDefensiveRebounds
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationDefensiveRebounds]
                </td>
            </tr>
            }
        <th>Block on</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalBlocksOn
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationBlocksOn]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalBlocksOn
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationBlocksOn]
                </td>
            </tr>
            }
        <th>Block made</th>
            @foreach (var position in @Model.PositionPlaceholderItems)
            {
            <tr style="background-color:@position.color">
                <td>@position.key</td>
                <td>
                        @Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalBlocksMade
                    [@Model.HomeTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).ParticipationBlocksMade]
                </td>
                <td>
                        @Model.AwayTeam.CorePerformance.PerformanceByPositions.FirstOrDefault(x => x.Position == position.key).TotalBlocksMade
                    [@Model.AwayTeam.CorePerformance.PerformanceByPositions.First(x => x.Position == position.key).ParticipationBlocksMade]
                </td>
            </tr>
            }
        </tbody>
    </table>

}

<style>
    .performance-table {
        width: 100%;
        border-collapse: collapse;
    }

        .performance-table th, .performance-table td {
            padding: 8px;
            border: 1px solid #ddd;
            text-align: left;
        }

        .performance-table th {
            background-color: #f2f2f2;
        }
</style>